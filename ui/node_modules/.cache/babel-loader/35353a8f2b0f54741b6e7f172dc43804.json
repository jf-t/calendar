{"ast":null,"code":"import { receiveEvent, receiveEvents } from '../actions/calendarActions';\nimport { createCalendar, getCalendarInfo, editCalendar, getCalendars } from '../util/calendarUtil';\n\nvar CalendarMiddleware = function CalendarMiddleware(_ref) {\n  var getState = _ref.getState,\n      dispatch = _ref.dispatch;\n  return function (next) {\n    return function (action) {\n      switch (action.type) {\n        case 'CREATE_EVENT':\n          createEvent(action.payload.event, function (event) {\n            return dispatch(recieveEvent(event));\n          });\n          return next(action);\n\n        case 'GET_EVENT':\n          getEvent(action.payload.id, function (event) {\n            return dispatch(recieveEvent(event));\n          });\n          return next(action);\n\n        case 'EDIT_EVENT':\n          editEvent(action.payload.event, function (event) {\n            return dispatch(recieveEvent(event));\n          });\n          return next(action);\n\n        case 'GET_CALENDAR_MONTH':\n          getEventsMonth(action.payload, function (events) {\n            return dispatch(receiveEvents(events));\n          });\n          return next(action);\n\n        case 'GET_CALENDAR_WEEK':\n          getEventsWeek(action.payload, function (events) {\n            return dispatch(receiveEvents(events));\n          });\n          return next(action);\n\n        case 'GET_CALENDAR_DAY':\n          getEventsDay(action.payload, function (events) {\n            return dispatch(receiveEvents(events));\n          });\n          return next(action);\n\n        default:\n          return next(action);\n      }\n    };\n  };\n};\n\nexport default CalendarMiddleware;","map":{"version":3,"sources":["/Users/jackfintan/Desktop/codes/fun_projects/scheduler/ui/src/middleware/eventMiddleware.js"],"names":["receiveEvent","receiveEvents","createCalendar","getCalendarInfo","editCalendar","getCalendars","CalendarMiddleware","getState","dispatch","next","action","type","createEvent","payload","event","recieveEvent","getEvent","id","editEvent","getEventsMonth","events","getEventsWeek","getEventsDay"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,4BAA5C;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,YAA1C,EAAwDC,YAAxD,QAA4E,sBAA5E;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAYC,QAAZ,QAAYA,QAAZ;AAAA,SAA0B,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACrE,cAAQA,MAAM,CAACC,IAAf;AACE,aAAK,cAAL;AACEC,UAAAA,WAAW,CAACF,MAAM,CAACG,OAAP,CAAeC,KAAhB,EACC,UAACA,KAAD;AAAA,mBAAWN,QAAQ,CAACO,YAAY,CAACD,KAAD,CAAb,CAAnB;AAAA,WADD,CAAX;AAEA,iBAAOL,IAAI,CAACC,MAAD,CAAX;;AACF,aAAK,WAAL;AACEM,UAAAA,QAAQ,CAACN,MAAM,CAACG,OAAP,CAAeI,EAAhB,EACC,UAACH,KAAD;AAAA,mBAAWN,QAAQ,CAACO,YAAY,CAACD,KAAD,CAAb,CAAnB;AAAA,WADD,CAAR;AAEA,iBAAOL,IAAI,CAACC,MAAD,CAAX;;AACF,aAAK,YAAL;AACEQ,UAAAA,SAAS,CAACR,MAAM,CAACG,OAAP,CAAeC,KAAhB,EACC,UAACA,KAAD;AAAA,mBAAWN,QAAQ,CAACO,YAAY,CAACD,KAAD,CAAb,CAAnB;AAAA,WADD,CAAT;AAEA,iBAAOL,IAAI,CAACC,MAAD,CAAX;;AACF,aAAK,oBAAL;AACES,UAAAA,cAAc,CAACT,MAAM,CAACG,OAAR,EACC,UAACO,MAAD;AAAA,mBAAYZ,QAAQ,CAACP,aAAa,CAACmB,MAAD,CAAd,CAApB;AAAA,WADD,CAAd;AAEA,iBAAOX,IAAI,CAACC,MAAD,CAAX;;AACF,aAAK,mBAAL;AACEW,UAAAA,aAAa,CAACX,MAAM,CAACG,OAAR,EACC,UAACO,MAAD;AAAA,mBAAYZ,QAAQ,CAACP,aAAa,CAACmB,MAAD,CAAd,CAApB;AAAA,WADD,CAAb;AAEA,iBAAOX,IAAI,CAACC,MAAD,CAAX;;AACF,aAAK,kBAAL;AACEY,UAAAA,YAAY,CAACZ,MAAM,CAACG,OAAR,EACC,UAACO,MAAD;AAAA,mBAAYZ,QAAQ,CAACP,aAAa,CAACmB,MAAD,CAAd,CAApB;AAAA,WADD,CAAZ;AAEA,iBAAOX,IAAI,CAACC,MAAD,CAAX;;AACF;AACE,iBAAOD,IAAI,CAACC,MAAD,CAAX;AA1BJ;AA4BD,KA7BwD;AAAA,GAA9B;AAAA,CAA3B;;AA+BA,eAAeJ,kBAAf","sourcesContent":["import { receiveEvent, receiveEvents } from '../actions/calendarActions';\nimport { createCalendar, getCalendarInfo, editCalendar, getCalendars } from '../util/calendarUtil';\n\nconst CalendarMiddleware = ({getState, dispatch}) => next => action => {\n  switch (action.type) {\n    case 'CREATE_EVENT':\n      createEvent(action.payload.event,\n                  (event) => dispatch(recieveEvent(event)));\n      return next(action);\n    case 'GET_EVENT':\n      getEvent(action.payload.id,\n               (event) => dispatch(recieveEvent(event)));\n      return next(action);\n    case 'EDIT_EVENT':\n      editEvent(action.payload.event,\n                (event) => dispatch(recieveEvent(event)));\n      return next(action);\n    case 'GET_CALENDAR_MONTH':\n      getEventsMonth(action.payload,\n                     (events) => dispatch(receiveEvents(events)));\n      return next(action);\n    case 'GET_CALENDAR_WEEK':\n      getEventsWeek(action.payload,\n                    (events) => dispatch(receiveEvents(events)));\n      return next(action);\n    case 'GET_CALENDAR_DAY':\n      getEventsDay(action.payload,\n                   (events) => dispatch(receiveEvents(events)));\n      return next(action);\n    default:\n      return next(action);\n  }\n}\n\nexport default CalendarMiddleware;\n"]},"metadata":{},"sourceType":"module"}